{
	"name": "Sigma",
	"fileTypes": [
		"si"
	],
	"scopeName": "source.sigma",
	
	"patterns": [
		{
			"include": "#errors"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#definitions"
		},
		{
			"include": "#placeholders"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#constants-and-special-vars"
		},
		{
			"include": "#intrinsics"
		}
	],
	"repository": {
		"errors": {
			"patterns": [
				
			]
		},
		"keywords": {
			"patterns": [
                {
					"name": "keyword.declaration.sigma", 
					"match": "(?<=\\s|^)(func|in|u8|u16|u32|u64|i8|i16|i32|i64|f32|f64|bool|void|char|string)(?=\\s|$)"
				},
				{
					"name": "keyword.control.sigma",
					"match": "(?<=\\s|^)(if|else|switch|continue|break|while|loop|for|import)(?=\\s|$)"
				}
			]
		},
		"definitions": {
			"patterns": [
				
			]
		},
		"placeholders": {
			"patterns": [
				
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.sigma",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.sigma",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.sigma",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.sigma",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.sigma",
					"match": "(//.*|//\\s*)"
				},
				{
					"name": "comment.block.sigma",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"constants-and-special-vars": {
			"patterns": [
				{
					"name": "entity.name.function.sigma",
					"match": "(?<=(func)\\s+)(\\S+)"
				},
                {
					"name": "entity.name.function.sigma",
					"match": "(?<=\\s|^)(\\S+)(?=\\s?\\()"
				},
                {
					"name": "constant.numeric.sigma",
					"match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b(?!\\$)"
				}
			]
		},
		"intrinsics": {
			"patterns": [
				{
					"name": "variable.name.source.sigma",
					"match": "(?<=(import)\\s+)(\\S+)"
				},
                {
					"name": "variable.name.source.sigma",
					"match": "(?<=\\w+\\s+)([a-zA-Z_][a-zA-Z0-9_]*)"
				}
			]
		}
	}
}
